interface CustomizableOptionInterface {
    swatch: String @doc(description: "Option Swatch Path") @resolver(class: "Ls\\Hospitality\\Model\\Resolver\\Product\\SwatchPath")
}
type CustomizableMultipleValue {
    swatch: String @doc(description: "Option Swatch Path") @resolver(class: "Ls\\Hospitality\\Model\\Resolver\\Product\\SwatchPath")
}
type CustomizableDropDownValue {
    swatch: String @doc(description: "Option Swatch Path") @resolver(class: "Ls\\Hospitality\\Model\\Resolver\\Product\\SwatchPath")
}

type StoreConfig {
    ls_mag_hospitality_service_mode_status: Boolean @doc(description: "Indicates whether service mode is enabled (true) or disabled (false).")
    ls_mag_hospitality_service_mode_options: String @doc(description: "To fetch service mode options.")
    ls_mag_hospitality_order_tracking: Boolean @doc(description: "Indicates whether order tracking and status section on success page are enabled (true) or disabled (false).")
    ls_mag_hospitality_takeaway_sales_type: String @doc(description: "To fetch the configured takeaway sales type.")
    ls_mag_hospitality_delivery_salas_type: String @doc(description: "To fetch the configured delivery sales type.")
    ls_mag_hospitality_show_in_checkout: Boolean @doc(description: "Indicates whether order comments & status section on success page are enabled (true) or disabled (false).")
    ls_mag_hospitality_max_length: String @doc(description: "To fetch order comment allowable max length.")
    ls_mag_hospitality_collapse_state: String @doc(description: "To fetch initial collapse status of order comments.")
    ls_mag_hospitality_content_block: String @doc(description: "To fetch block identifier for QR Code Ordering Page.")
    ls_mag_hospitality_anonymous_order_enabled: Boolean @doc(description: "Indicates whether anonymous order is enabled (true) or disabled (false).")
    ls_mag_hospitality_anonymous_order_address_attributes_required: String @resolver(class: "Ls\\Hospitality\\Model\\Resolver\\Address\\Attributes") @doc(description: "To fetch anonymous order address attributes with information like required or optional.")
}

type Mutation {
    setGivenFieldsOnAddress(input: SetGivenFieldsOnAddressInput): SetGivenFieldsOnAddressOutput @resolver(class: "Ls\\Hospitality\\Model\\Resolver\\Address\\SetGivenFieldsOnAddress") @doc(description: "Set Given fields on both shipping and billing address.")
}

input SetGivenFieldsOnAddressInput @doc(description: "Contain address fields.") {
    cart_id: String! @doc(description: "The unique ID of a `Cart` object.")
    address_fields: [AddressFieldData] @doc(description: "Array of all required address fields.")
}

input AddressFieldData {
    field_name: String! @doc(description: "Address Field name.")
    field_value: String @doc(description: "Address Field value.")
}

type SetGivenFieldsOnAddressOutput @doc(description: "Contains details about the cart.") {
    cart: Cart! @doc(description: "The cart after setting the given address fields.")
}
